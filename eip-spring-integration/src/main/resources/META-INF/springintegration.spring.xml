<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
	http://www.springframework.org/schema/integration/file
    http://www.springframework.org/schema/integration/file/spring-integration-file.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:eip.spring.integration.properties" />
	</bean>
	<int-file:inbound-channel-adapter id="deliveryNotesChannelAdapter"
		directory="${deliveryNotesInDir}" channel="csvDeliveryNotesChannel">
		<int:poller fixed-rate="1000" />
	</int-file:inbound-channel-adapter>

	<int:channel id="csvDeliveryNotesChannel" />
	<int:service-activator input-channel="csvDeliveryNotesChannel"
		ref="deliveryNoteCsvImport" method="importCsv" />

	<bean id="deliveryNoteCsvReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="prototype">
		<property name="encoding" value="UTF-8" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value=";" />
						<property name="names" value="itemType,name,number,price,quantity" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="eip.spring.integration.StockItemFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="stockWriterAdapter"
		class="org.springframework.batch.item.adapter.ItemWriterAdapter">
		<property name="targetObject" ref="stockService" />
		<property name="targetMethod" value="addStockItem" />
	</bean>


	<bean id="deliveryNoteCsvImport" class="eip.spring.integration.DeliveryNoteCsvImport"
		scope="prototype">
		<constructor-arg name="reader" ref="deliveryNoteCsvReader" />
		<constructor-arg name="writer" ref="stockWriterAdapter" />
	</bean>
	<int-file:inbound-channel-adapter id="orderChannelAdapter"
		directory="${ordersInDir}" channel="csvOrderChannel">
		<int:poller fixed-rate="1000"/>
	</int-file:inbound-channel-adapter>

	<int:channel id="csvOrderChannel" />

	<int:service-activator input-channel="csvOrderChannel"
		ref="orderCsvImport" />

	<bean id="orderCsvImport" class="eip.spring.integration.OrderCsvImport">
		<constructor-arg name="reader" ref="orderCsvReader" />
		<constructor-arg name="channel" ref="orderServiceChannel" />
	</bean>

	<int:channel id="orderServiceChannel" />
	<int:chain input-channel="orderServiceChannel">
		<int:service-activator ref="orderService"  method="handleOrder"/>
		<int:service-activator ref="backlogService" method="saveBacklogItems"/>
	</int:chain>

	<bean id="orderCsvReader" class="eip.spring.integration.OrderFlatFileItemReaderDelegate"
		scope="prototype">
		<constructor-arg>
			<bean class="org.springframework.batch.item.file.FlatFileItemReader">
				<property name="encoding" value="UTF-8" />
				<property name="lineMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
						<property name="lineTokenizer">
							<bean
								class="org.springframework.batch.item.file.transform.PatternMatchingCompositeLineTokenizer">
								<property name="tokenizers">
									<map>
										<entry key="ORDER*">
											<bean
												class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
												<property name="delimiter" value=";" />
												<property name="names" value="recType, customerName, orderNumber" />
											</bean>
										</entry>
										<entry key="ITEM*">
											<bean
												class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
												<property name="delimiter" value=";" />
												<property name="names" value="recType, itemType,name,number" />
											</bean>
										</entry>
									</map>
								</property>
							</bean>
						</property>
						<property name="fieldSetMapper">
							<bean
								class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
						</property>
					</bean>
				</property>
			</bean>
		</constructor-arg>
	</bean>
</beans>
