<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
	http://www.springframework.org/schema/integration/file
    http://www.springframework.org/schema/integration/file/spring-integration-file.xsd">

	<int-file:inbound-channel-adapter id="orderChannelAdapter"
		directory="file:src/test/resources/orders" channel="csvOrderChannel">
		<int:poller fixed-rate="1000"/>
	</int-file:inbound-channel-adapter>

	<int:channel id="csvOrderChannel" />

	<int:service-activator input-channel="csvOrderChannel"
		ref="orderCsvImport" />

	<bean id="orderCsvImport" class="eis.domain.si.OrderCsvImport">
		<constructor-arg name="reader" ref="orderCsvReader" />
		<constructor-arg name="channel" ref="orderServiceChannel" />
	</bean>

	<int:channel id="orderServiceChannel" />
	<int:chain input-channel="orderServiceChannel">
		<int:service-activator ref="orderkService"  method="handleOrder"/>
		<int:service-activator ref="backlogService"/>
	</int:chain>

	
	<bean id="orderkService" class="eis.domain.services.OrderService">
		<constructor-arg name="stockService">
			<bean class="eis.domain.services.StockService">
				<constructor-arg ref="stockItemRepository"></constructor-arg>
			</bean>
		</constructor-arg>
		<constructor-arg name="customerRepository" ref="customerRepository"/>
	</bean>
	
	<bean id="backlogService" class="eis.domain.services.BacklogService">
		<constructor-arg name="backlogDir" value="target"/>
		<constructor-arg name="writer">
			<bean class="org.springframework.batch.item.file.FlatFileItemWriter">
				<property name="lineAggregator">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
						<property name="delimiter" value=";"/>
						<property name="fieldExtractor">
							<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
								<property name="names" value="name,number"/>
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</constructor-arg>
		
	</bean>
	<bean id="orderCsvReader" class="eis.domain.si.OrderFlatFileItemReaderDelegate"
		scope="prototype">
		<constructor-arg>
			<bean class="org.springframework.batch.item.file.FlatFileItemReader">
				<property name="encoding" value="UTF-8" />
				<property name="lineMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
						<property name="lineTokenizer">
							<bean
								class="org.springframework.batch.item.file.transform.PatternMatchingCompositeLineTokenizer">
								<property name="tokenizers">
									<map>
										<entry key="ORDER*">
											<bean
												class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
												<property name="delimiter" value=";" />
												<property name="names" value="recType, customerName, orderNumber" />
											</bean>
										</entry>
										<entry key="ITEM*">
											<bean
												class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
												<property name="delimiter" value=";" />
												<property name="names" value="recType, itemType,name,number" />
											</bean>
										</entry>
									</map>
								</property>
							</bean>
						</property>
						<property name="fieldSetMapper">
							<bean
								class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
						</property>
					</bean>
				</property>
			</bean>
		</constructor-arg>
	</bean>

</beans>
